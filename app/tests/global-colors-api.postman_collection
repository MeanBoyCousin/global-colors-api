{
	"info": {
		"_postman_id": "5166f1d3-0bf0-4262-a2d5-2c9e064fd521",
		"name": "Global Colors API",
		"description": "Fetch color schemes for countries around the world!",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "All",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2aeba89d-4674-4a8b-8a15-765d187d7adb",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns 7 continents\", function () {",
							"    const continents = Object.keys(pm.response.json());",
							"    pm.expect(continents.length).to.eql(7);",
							"});",
							"",
							"pm.test(\"Continents should be of type object\", function () {",
							"    const continents = pm.response.json();",
							"    pm.expect(typeof continents.Africa).to.eql('object');",
							"});",
							"",
							"pm.test(\"Continents should have correct keys\", function () {",
							"    const africa = pm.response.json().Africa;",
							"    const resKeys = Object.keys(africa);",
							"    const expectedKeys = ['continentName', 'continentCode', 'countries'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Continent name should be a string\", function () {",
							"    const africa = typeof pm.response.json().Africa.continentName;",
							"    pm.expect(africa).to.eql('string');",
							"});",
							"",
							"pm.test(\"Continent code should be a string of 2 letters\", function () {",
							"    const africaType = typeof pm.response.json().Africa.continentCode;",
							"    const africa = pm.response.json().Africa.continentCode;",
							"    pm.expect(africaType).to.eql('string');",
							"    pm.expect(africa.length).to.eql(2);",
							"});",
							"",
							"pm.test(\"Countries should be an object\", function () {",
							"    const countries = typeof pm.response.json().Africa.countries;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Countries should have correct keys\", function () {",
							"    const algeria = pm.response.json().Africa.countries.Algeria;",
							"    const resKeys = Object.keys(algeria);",
							"    const expectedKeys = ['countryName', 'countryCode', 'primary', 'secondary'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Country name should be a string\", function () {",
							"    const algeria = typeof pm.response.json().Africa.countries.Algeria.countryName;",
							"    pm.expect(algeria).to.eql('string');",
							"});",
							"",
							"pm.test(\"Country code should be a string of either 3 or 6 letters\", function () {",
							"    const algeriaType = typeof pm.response.json().Africa.countries.Algeria.countryCode;",
							"    const algeria = pm.response.json().Africa.countries.Algeria.countryCode;",
							"    pm.expect(algeriaType).to.eql('string');",
							"    pm.expect(algeria.length).to.be.within(3,6);",
							"    pm.expect(algeria.length).to.not.eql(4);",
							"    pm.expect(algeria.length).to.not.eql(5);",
							"});",
							"",
							"pm.test(\"Primary should be of type object\", function () {",
							"    const countries = typeof pm.response.json().Africa.countries.Algeria.primary;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Primary should have correct keys\", function () {",
							"    const primary = pm.response.json().Africa.countries.Algeria.primary;",
							"    const resKeys = Object.keys(primary);",
							"    const expectedKeys = ['hex', 'rgb', 'hsl', 'css'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Primary colorsets should be of type array\", function () {",
							"    const arrays = Object.values(pm.response.json().Africa.countries.Algeria.primary).every(set => Array.isArray(set));",
							"    pm.expect(arrays).to.eql(true);",
							"});",
							"",
							"pm.test(\"Secondary should be of type object if data is available\", function () {",
							"    const countries = typeof pm.response.json().Asia.countries.Afghanistan.secondary;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Secondary should have correct keys if data is available\", function () {",
							"    const secondary = pm.response.json().Asia.countries.Afghanistan.secondary;",
							"    const resKeys = Object.keys(secondary);",
							"    const expectedKeys = ['hex', 'rgb', 'hsl', 'css', 'notes'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Secondary colorsets should be of type array and notes should be of type string if data is available\", function () {",
							"    const arrays = Object.values(pm.response.json().Asia.countries.Afghanistan.secondary).slice(0,4).every(set => Array.isArray(set));",
							"    const isNotesString = typeof pm.response.json().Asia.countries.Afghanistan.secondary.notes;",
							"    pm.expect(arrays).to.eql(true);",
							"    pm.expect(isNotesString).to.eql('string');",
							"});",
							"",
							"pm.test(\"Secondary should be an empty string if data is unavailable\", function () {",
							"    const countriesType = typeof pm.response.json().Africa.countries.Algeria.secondary;",
							"    const countries = pm.response.json().Africa.countries.Algeria.secondary;",
							"    pm.expect(countriesType).to.eql('string');",
							"    pm.expect(countries).to.eql('');",
							"});",
							"",
							"// Query specific tests.",
							"pm.sendRequest(\"http://localhost:3000/api/v1/all?colors=green\", function (err, response) {",
							"    pm.test(\"Returns countries that use green only\", function () {",
							"        const afg = response.json().Asia.countries.Afghanistan.primary.css[2];",
							"        const arm = response.json().Asia.countries.Armenia;",
							"        pm.expect(afg).to.eql('green')",
							"        pm.expect(arm).to.eql(undefined)",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/all?continents=AS,EU\", function (err, response) {",
							"    pm.test(\"Returns query specified continents only\", function () {",
							"        const continents = Object.keys(response.json());",
							"        const expectedContinents = ['Asia', 'Europe'];",
							"        pm.expect(continents.length).to.eql(2);",
							"        pm.expect(continents).to.eql(expectedContinents)",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/all?countries=AFG,ATAGBR\", function (err, response) {",
							"    pm.test(\"Returns query specified countries only\", function () {",
							"        const continents = [];",
							"        continents.push(Object.keys(response.json().Asia.countries));",
							"        continents.push(Object.keys(response.json().Antarctica.countries));",
							"        const expectedContinents = 'Afghanistan, British Antarctic Claim';",
							"        pm.expect(continents.length).to.eql(2);",
							"        pm.expect(continents.join(', ')).to.eql(expectedContinents)",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/all?nbw\", function (err, response) {",
							"    pm.test(\"Returns countries will black and white removed\", function () {",
							"        const afgHEX = response.json().Asia.countries.Afghanistan.primary.hex;",
							"        const afgRGB = response.json().Asia.countries.Afghanistan.primary.rgb;",
							"        const afgHSL = response.json().Asia.countries.Afghanistan.primary.hsl;",
							"        const asfCSS = response.json().Asia.countries.Afghanistan.primary.css;",
							"        pm.expect(afgHEX).to.eql([\"#be0000\", \"#090\"])",
							"        pm.expect(afgRGB).to.eql([\"rgb(190,0,0)\", \"rgb(0,153,0)\"])",
							"        pm.expect(afgHSL).to.eql([\"hsl(0,100%,37%)\", \"hsl(120,100%,30%)\"])",
							"        pm.expect(asfCSS).to.eql([\"firebrick\", \"green\"])",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/all?set=primary\", function (err, response) {",
							"    pm.test(\"Secondary should be undefined if set=primary\", function () {",
							"        const countriesType = typeof response.json().Africa.countries.Algeria.secondary;",
							"        pm.expect(countriesType).to.eql('undefined');",
							"    });",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/all?set=secondary\", function (err, response) {",
							"    pm.test(\"Primary should be undefined if set=secondary\", function () {",
							"        const countriesType = typeof response.json().Africa.countries.Algeria.primary;",
							"        pm.expect(countriesType).to.eql('undefined');",
							"    });",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/all?types=hex\", function (err, response) {",
							"    pm.test(\"Types should only match given formats in query\", function () {",
							"        const primary = response.json().Asia.countries.Afghanistan.primary;",
							"        const secondary = response.json().Asia.countries.Afghanistan.secondary;",
							"        pm.expect(Object.keys(primary).length).to.eql(1);",
							"        pm.expect(Object.keys(secondary).length).to.eql(2); // Secondary is 2 because of the notes.",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"all"
					]
				},
				"description": "All endpoint."
			},
			"response": []
		},
		{
			"name": "Secondary",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc0c7d31-ea23-454f-a657-0257e221e8b6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns 7 continents\", function () {",
							"    const continents = Object.keys(pm.response.json());",
							"    pm.expect(continents.length).to.eql(7);",
							"});",
							"",
							"pm.test(\"Continents should be of type object\", function () {",
							"    const continents = pm.response.json();",
							"    pm.expect(typeof continents.Africa).to.eql('object');",
							"});",
							"",
							"pm.test(\"Continents should have correct keys\", function () {",
							"    const africa = pm.response.json().Africa;",
							"    const resKeys = Object.keys(africa);",
							"    const expectedKeys = ['continentName', 'continentCode', 'countries'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Continent name should be a string\", function () {",
							"    const africa = typeof pm.response.json().Africa.continentName;",
							"    pm.expect(africa).to.eql('string');",
							"});",
							"",
							"pm.test(\"Continent code should be a string of 2 letters\", function () {",
							"    const africaType = typeof pm.response.json().Africa.continentCode;",
							"    const africa = pm.response.json().Africa.continentCode;",
							"    pm.expect(africaType).to.eql('string');",
							"    pm.expect(africa.length).to.eql(2);",
							"});",
							"",
							"pm.test(\"Countries should be an object\", function () {",
							"    const countries = typeof pm.response.json().Africa.countries;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Countries should have correct keys\", function () {",
							"    const afghanistan = pm.response.json().Asia.countries.Afghanistan;",
							"    const resKeys = Object.keys(afghanistan);",
							"    const expectedKeys = ['countryName', 'countryCode', 'secondary'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Country name should be a string\", function () {",
							"    const afghanistan = typeof pm.response.json().Asia.countries.Afghanistan.countryName;",
							"    pm.expect(afghanistan).to.eql('string');",
							"});",
							"",
							"pm.test(\"Country code should be a string of either 3 or 6 letters\", function () {",
							"    const afghanistanType = typeof pm.response.json().Asia.countries.Afghanistan.countryCode;",
							"    const afghanistan = pm.response.json().Asia.countries.Afghanistan.countryCode;",
							"    pm.expect(afghanistanType).to.eql('string');",
							"    pm.expect(afghanistan.length).to.be.within(3,6);",
							"    pm.expect(afghanistan.length).to.not.eql(4);",
							"    pm.expect(afghanistan.length).to.not.eql(5);",
							"});",
							"",
							"pm.test(\"Primary should be missing\", function () {",
							"    const countries = pm.response.json().Asia.countries.Afghanistan.primary;",
							"    pm.expect(countries).to.eql(undefined);",
							"});",
							"",
							"pm.test(\"Secondary should be of type object if data is available\", function () {",
							"    const countries = typeof pm.response.json().Asia.countries.Afghanistan.secondary;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Secondary should have correct keys if data is available\", function () {",
							"    const secondary = pm.response.json().Asia.countries.Afghanistan.secondary;",
							"    const resKeys = Object.keys(secondary);",
							"    const expectedKeys = ['hex', 'rgb', 'hsl', 'css', 'notes'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Secondary colorsets should be of type array and notes should be of type string if data is available\", function () {",
							"    const arrays = Object.values(pm.response.json().Asia.countries.Afghanistan.secondary).slice(0,4).every(set => Array.isArray(set));",
							"    const isNotesString = typeof pm.response.json().Asia.countries.Afghanistan.secondary.notes;",
							"    pm.expect(arrays).to.eql(true);",
							"    pm.expect(isNotesString).to.eql('string');",
							"});",
							"",
							"pm.test(\"Country should be missing if no secondary data available\", function () {",
							"    const countriesType = pm.response.json().Asia.countries.Armenia;",
							"    pm.expect(countriesType).to.eql(undefined);",
							"});",
							"",
							"// Query specific tests.",
							"pm.sendRequest(\"http://localhost:3000/api/v1/secondary?colors=green\", function (err, response) {",
							"    pm.test(\"Returns countries that use green only\", function () {",
							"        const afg = response.json().Asia.countries.Afghanistan.secondary.css[0];",
							"        const bgd = response.json().Asia.countries.Bangladesh;",
							"        pm.expect(afg).to.eql('darkcyan')",
							"        pm.expect(bgd).to.eql(undefined)",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/secondary?continents=AS,EU\", function (err, response) {",
							"    pm.test(\"Returns query specified continents only\", function () {",
							"        const continents = Object.keys(response.json());",
							"        const expectedContinents = ['Asia', 'Europe'];",
							"        pm.expect(continents.length).to.eql(2);",
							"        pm.expect(continents).to.eql(expectedContinents)",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/secondary?countries=AFG,BTN\", function (err, response) {",
							"    pm.test(\"Returns query specified countries only\", function () {",
							"        const continents = [];",
							"        continents.push(Object.keys(response.json().Asia.countries));",
							"        const expectedContinents = 'Afghanistan,Bhutan';",
							"        pm.expect(continents[0].length).to.eql(2);",
							"        pm.expect(continents.join(', ')).to.eql(expectedContinents)",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/secondary?nbw\", function (err, response) {",
							"    pm.test(\"Returns countries will black and white removed\", function () {",
							"        const bgd = response.json().Asia.countries.Bangladesh;",
							"        pm.expect(bgd).to.eql(undefined)",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/secondary?types=hex\", function (err, response) {",
							"    pm.test(\"Types should only match given formats in query\", function () {",
							"        const secondary = response.json().Asia.countries.Afghanistan.secondary;",
							"        pm.expect(Object.keys(secondary).length).to.eql(2); // Secondary is 2 because of the notes.",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/secondary",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"secondary"
					]
				},
				"description": "Secondary endpoint."
			},
			"response": []
		},
		{
			"name": "Continents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e35f1002-6c6f-433d-8094-2bb3841a06e7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns only Africa\", function () {",
							"    pm.expect(pm.response.json().continentCode).to.eql('AF');",
							"});",
							"",
							"pm.test(\"Continent name should be a string\", function () {",
							"    const africa = typeof pm.response.json().continentName;",
							"    pm.expect(africa).to.eql('string');",
							"});",
							"",
							"pm.test(\"Continent code should be a string of 2 letters\", function () {",
							"    const africaType = typeof pm.response.json().continentCode;",
							"    const africa = pm.response.json().continentCode;",
							"    pm.expect(africaType).to.eql('string');",
							"    pm.expect(africa.length).to.eql(2);",
							"});",
							"",
							"pm.test(\"Countries should be an object\", function () {",
							"    const countries = typeof pm.response.json().countries;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Countries should have correct keys\", function () {",
							"    const algeria = pm.response.json().countries.Algeria;",
							"    const resKeys = Object.keys(algeria);",
							"    const expectedKeys = ['countryName', 'countryCode', 'primary', 'secondary'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Country name should be a string\", function () {",
							"    const algeria = typeof pm.response.json().countries.Algeria.countryName;",
							"    pm.expect(algeria).to.eql('string');",
							"});",
							"",
							"pm.test(\"Country code should be a string of either 3 or 6 letters\", function () {",
							"    const algeriaType = typeof pm.response.json().countries.Algeria.countryCode;",
							"    const algeria = pm.response.json().countries.Algeria.countryCode;",
							"    pm.expect(algeriaType).to.eql('string');",
							"    pm.expect(algeria.length).to.be.within(3,6);",
							"    pm.expect(algeria.length).to.not.eql(4);",
							"    pm.expect(algeria.length).to.not.eql(5);",
							"});",
							"",
							"pm.test(\"Primary should be of type object\", function () {",
							"    const countries = typeof pm.response.json().countries.Algeria.primary;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Primary should have correct keys\", function () {",
							"    const primary = pm.response.json().countries.Algeria.primary;",
							"    const resKeys = Object.keys(primary);",
							"    const expectedKeys = ['hex', 'rgb', 'hsl', 'css'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Primary colorsets should be of type array\", function () {",
							"    const arrays = Object.values(pm.response.json().countries.Algeria.primary).every(set => Array.isArray(set));",
							"    pm.expect(arrays).to.eql(true);",
							"});",
							"",
							"pm.test(\"Secondary should be of type object if data is available\", function () {",
							"    const countries = typeof pm.response.json().countries.Egypt.secondary;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Secondary should have correct keys if data is available\", function () {",
							"    const secondary = pm.response.json().countries.Egypt.secondary;",
							"    const resKeys = Object.keys(secondary);",
							"    const expectedKeys = ['hex', 'rgb', 'hsl', 'css', 'notes'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Secondary colorsets should be of type array and notes should be of type string if data is available\", function () {",
							"    const arrays = Object.values(pm.response.json().countries.Egypt.secondary).slice(0,4).every(set => Array.isArray(set));",
							"    const isNotesString = typeof pm.response.json().countries.Egypt.secondary.notes;",
							"    pm.expect(arrays).to.eql(true);",
							"    pm.expect(isNotesString).to.eql('string');",
							"});",
							"",
							"pm.test(\"Secondary should be an empty string if data is unavailable\", function () {",
							"    const countriesType = typeof pm.response.json().countries.Algeria.secondary;",
							"    const countries = pm.response.json().countries.Algeria.secondary;",
							"    pm.expect(countriesType).to.eql('string');",
							"    pm.expect(countries).to.eql('');",
							"});",
							"",
							"// Query specific tests.",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AF?colors=green\", function (err, response) {",
							"    pm.test(\"Returns countries that use green only\", function () {",
							"        const dza = response.json().countries.Algeria.primary.css[0];",
							"        const ago = response.json().countries.Angola;",
							"        pm.expect(dza).to.eql('darkgreen')",
							"        pm.expect(ago).to.eql(undefined)",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AF?countries=DZA,AGO\", function (err, response) {",
							"    pm.test(\"Returns query specified countries only\", function () {",
							"        const continents = [];",
							"        continents.push(Object.keys(response.json().countries));",
							"        const expectedContinents = 'Algeria,Angola';",
							"        pm.expect(continents[0].length).to.eql(2);",
							"        pm.expect(continents.join(', ')).to.eql(expectedContinents)",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AF?nbw\", function (err, response) {",
							"    pm.test(\"Returns countries will black and white removed\", function () {",
							"        const dzaHEX = response.json().countries.Algeria.primary.hex;",
							"        const dzaRGB = response.json().countries.Algeria.primary.rgb;",
							"        const dzaHSL = response.json().countries.Algeria.primary.hsl;",
							"        const dzaCSS = response.json().countries.Algeria.primary.css;",
							"        pm.expect(dzaHEX).to.eql([\"#006230\", \"#d30731\"])",
							"        pm.expect(dzaRGB).to.eql([\"rgb(0,98,48)\", \"rgb(211,7,49)\"])",
							"        pm.expect(dzaHSL).to.eql([\"hsl(149,100%,19%)\", \"hsl(348,94%,43%)\"])",
							"        pm.expect(dzaCSS).to.eql([\"darkgreen\", \"crimson\"])",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AF?set=primary\", function (err, response) {",
							"    pm.test(\"Secondary should be undefined if set=primary\", function () {",
							"        const countriesType = response.json().countries.Algeria.secondary;",
							"        pm.expect(countriesType).to.eql(undefined);",
							"    });",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AF?set=secondary\", function (err, response) {",
							"    pm.test(\"Primary should be undefined if set=secondary\", function () {",
							"        const countriesType = response.json().countries.Algeria.primary;",
							"        pm.expect(countriesType).to.eql(undefined);",
							"    });",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AF?types=hex\", function (err, response) {",
							"    pm.test(\"Types should only match given formats in query\", function () {",
							"        const primary = response.json().countries.Algeria.primary;",
							"        const secondary = response.json().countries.Egypt.secondary;",
							"        pm.expect(Object.keys(primary).length).to.eql(1);",
							"        pm.expect(Object.keys(secondary).length).to.eql(2); // Secondary is 2 because of the notes.",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/:continent",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						":continent"
					],
					"variable": [
						{
							"key": "continent",
							"value": "AF"
						}
					]
				},
				"description": "Continents endpoint."
			},
			"response": []
		},
		{
			"name": "Countries",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7a57fbcf-18f7-4745-b9df-1009ca3ec310",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns only Afghanistan\", function () {",
							"    pm.expect(pm.response.json().countryCode).to.eql('AFG');",
							"});",
							"",
							"pm.test(\"Country name should be a string\", function () {",
							"    const africa = typeof pm.response.json().countryName;",
							"    pm.expect(africa).to.eql('string');",
							"});",
							"",
							"pm.test(\"Country code should be a string of either 3 or 6 letters\", function () {",
							"    const algeriaType = typeof pm.response.json().countryCode;",
							"    const algeria = pm.response.json().countryCode;",
							"    pm.expect(algeriaType).to.eql('string');",
							"    pm.expect(algeria.length).to.be.within(3,6);",
							"    pm.expect(algeria.length).to.not.eql(4);",
							"    pm.expect(algeria.length).to.not.eql(5);",
							"});",
							"",
							"pm.test(\"Primary should be of type object\", function () {",
							"    const countries = typeof pm.response.json().primary;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Primary should have correct keys\", function () {",
							"    const primary = pm.response.json().primary;",
							"    const resKeys = Object.keys(primary);",
							"    const expectedKeys = ['hex', 'rgb', 'hsl', 'css'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Primary colorsets should be of type array\", function () {",
							"    const arrays = Object.values(pm.response.json().primary).every(set => Array.isArray(set));",
							"    pm.expect(arrays).to.eql(true);",
							"});",
							"",
							"pm.test(\"Secondary should be of type object if data is available\", function () {",
							"    const countries = typeof pm.response.json().secondary;",
							"    pm.expect(countries).to.eql('object');",
							"});",
							"",
							"pm.test(\"Secondary should have correct keys if data is available\", function () {",
							"    const secondary = pm.response.json().secondary;",
							"    const resKeys = Object.keys(secondary);",
							"    const expectedKeys = ['hex', 'rgb', 'hsl', 'css', 'notes'];",
							"    pm.expect(resKeys).to.eql(expectedKeys);",
							"});",
							"",
							"pm.test(\"Secondary colorsets should be of type array and notes should be of type string if data is available\", function () {",
							"    const arrays = Object.values(pm.response.json().secondary).slice(0,4).every(set => Array.isArray(set));",
							"    const isNotesString = typeof pm.response.json().secondary.notes;",
							"    pm.expect(arrays).to.eql(true);",
							"    pm.expect(isNotesString).to.eql('string');",
							"});",
							"",
							"// Query specific tests.",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AGO\", function (err, response) {",
							"    pm.test(\"Secondary should be an empty string if data is unavailable\", function () {",
							"        const countriesType = typeof response.json().secondary;",
							"        const countries = response.json().secondary;",
							"        pm.expect(countriesType).to.eql('string');",
							"        pm.expect(countries).to.eql('');",
							"    });",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AFG?nbw\", function (err, response) {",
							"    pm.test(\"Returns countries will black and white removed\", function () {",
							"        const afgHEX = response.json().primary.hex;",
							"        const afgRGB = response.json().primary.rgb;",
							"        const afgHSL = response.json().primary.hsl;",
							"        const afgCSS = response.json().primary.css;",
							"        pm.expect(afgHEX).to.eql([\"#be0000\", \"#090\"])",
							"        pm.expect(afgRGB).to.eql([\"rgb(190,0,0)\", \"rgb(0,153,0)\"])",
							"        pm.expect(afgHSL).to.eql([\"hsl(0,100%,37%)\", \"hsl(120,100%,30%)\"])",
							"        pm.expect(afgCSS).to.eql([\"firebrick\", \"green\"])",
							"    }); ",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AFG?set=primary\", function (err, response) {",
							"    pm.test(\"Secondary should be undefined if set=primary\", function () {",
							"        const countriesType = response.json().secondary;",
							"        pm.expect(countriesType).to.eql(undefined);",
							"    });",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AFG?set=secondary\", function (err, response) {",
							"    pm.test(\"Primary should be undefined if set=secondary\", function () {",
							"        const countriesType = response.json().primary;",
							"        pm.expect(countriesType).to.eql(undefined);",
							"    });",
							"});",
							"",
							"pm.sendRequest(\"http://localhost:3000/api/v1/AFG?types=hex\", function (err, response) {",
							"    pm.test(\"Types should only match given formats in query\", function () {",
							"        const primary = response.json().primary;",
							"        const secondary = response.json().secondary;",
							"        pm.expect(Object.keys(primary).length).to.eql(1);",
							"        pm.expect(Object.keys(secondary).length).to.eql(2); // Secondary is 2 because of the notes.",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/:country",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						":country"
					],
					"variable": [
						{
							"key": "country",
							"value": "AFG"
						}
					]
				},
				"description": "Countries endpoint."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "20e6c64a-75fc-4abe-9fb2-532543773bf4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a220200d-a6bd-4d2a-9063-4f4eb5905fb4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "676f19a9-2326-4570-8980-af5626b9c38d",
			"key": "prettify",
			"value": "",
			"type": "string"
		},
		{
			"id": "f12a2a57-1363-4a5b-8b35-09c7d7359e16",
			"key": "colorset",
			"value": "",
			"type": "string"
		},
		{
			"id": "a8679661-d032-4a9a-baa8-c0f68004424b",
			"key": "colortypes",
			"value": "",
			"type": "string"
		},
		{
			"id": "be7f524f-e9c6-4ff2-8c08-7466f73078e3",
			"key": "continents",
			"value": "",
			"type": "string"
		},
		{
			"id": "61ef9068-0cf0-4182-9847-e994f31e38b6",
			"key": "countries",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}